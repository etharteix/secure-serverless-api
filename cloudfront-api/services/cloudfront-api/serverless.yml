service: cloudfront-api
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: ${opt:region, 'us-east-1'} 
  stage: ${opt:stage, 'dev'}

custom:
  base: ${self:service}-${self:provider.stage}

functions:
  cloudfrontApi:
    handler: src/handlers/index.handler
    name: ${self:custom.base}-function
    memorySize: 512 # Memory size default value
    timeout: 60 # Maximum timeout from CloudFront
    url: # Enabling Lambda Function URL
      cors: # CORS settings
        allowedOrigins: # Add your allowed origins in here
          - https://serverlessguru.com
        allowedHeaders: # Add your allowed headers in here
          - Content-Type
          - Authorization
        allowedMethods: # Add your allowed methods in here
          - GET
          - POST
        allowCredentials: false # Change to true to allow cookies
        exposedResponseHeaders: # Add non-CORS-safelisted headers
          - X-Custom-Header 
        maxAge: 0 # Preflight response cache default value

resources:
  Resources:
    CloudfrontApiDistribution:
      Type: AWS::CloudFront::Distribution
      Properties: 
        DistributionConfig:
          Comment: ${self:custom.base}-distribution
          Enabled: true
          PriceClass: PriceClass_100 # North America, Europe and Israel
          HttpVersion: http2and3 # Accepting all HTTP versions
          DefaultCacheBehavior:
            AllowedMethods: # Restricting methods on Lambda Function and not here
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            CachedMethods: # Caching all possible methods
              - GET
              - HEAD
              - OPTIONS
            CachePolicyId: ${param:cachePolicyId} # Created CloudFront Policy
            OriginRequestPolicyId: ${param:originRequestPolicyId} # Created CloudFront Policy
            ResponseHeadersPolicyId: ${param:responseHeadersPolicyId} # Created CloudFront Policy
            Compress: false # Not compressing files
            SmoothStreaming: false # Not working with media files
            TargetOriginId: lambda-origin # Referencing the created Origin below
            ViewerProtocolPolicy: https-only # Restricting to HTTPS communication only
          Origins:
            - Id: lambda-origin # Lambda Function URL custom origin
              DomainName: !Select [2, !Split ["/", !GetAtt CloudfrontApiLambdaFunctionUrl.FunctionUrl]]
              CustomOriginConfig: 
                OriginProtocolPolicy: https-only # Restricting to HTTPS communication only
                OriginSSLProtocols:
                  - TLSv1.2 # Using minimum TLSv1.2 protocol
                OriginReadTimeout: 60 # CloudFront maximum accepted origin timeout
              # OriginShield:
              #   Enabled: true # Enabling the AWS Shield usage on the CloudFront distribution
              #   OriginShieldRegion: ${self:provider.region}

  Outputs:
    CloudfrontApiUrl:
      Value: !Sub
        - 'https://${DomainName}/'
        - DomainName: !GetAtt CloudfrontApiDistribution.DomainName