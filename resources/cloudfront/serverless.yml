service: cloudfront-api-policies
frameworkVersion: '3'

provider:
  name: aws
  region: ${opt:region, 'us-east-1'} 
  stage: ${opt:stage, 'dev'} 

custom:
  base: ${self:service}-${self:provider.stage}

resources:
  Resources:
    CachePolicy:
      Type: AWS::CloudFront::CachePolicy
      Properties: 
        CachePolicyConfig:
          Name: ${self:custom.base}-cache
          MinTTL: 0
          DefaultTTL: 30
          MaxTTL: 60
          ParametersInCacheKeyAndForwardedToOrigin:
            EnableAcceptEncodingGzip: false
            CookiesConfig:
              CookieBehavior: none
            HeadersConfig:
              HeaderBehavior: none
            QueryStringsConfig: 
              QueryStringBehavior: none

    OriginRequestPolicy:
      Type: AWS::CloudFront::OriginRequestPolicy
      Properties: 
        OriginRequestPolicyConfig:
          Name: ${self:custom.base}-origin
          CookiesConfig:
            CookieBehavior: all
          HeadersConfig:
            HeaderBehavior: allExcept
            Headers:
              - Host
          QueryStringsConfig:
            QueryStringBehavior: all
    
    ResponseHeadersPolicy:
      Type: AWS::CloudFront::ResponseHeadersPolicy
      Properties: 
        ResponseHeadersPolicyConfig:
          Name: ${self:custom.base}-response
          CorsConfig:
              AccessControlAllowCredentials: false
              AccessControlAllowHeaders: 
                Items:
                  - "*"
              AccessControlAllowMethods: 
                Items:
                  - ALL
              AccessControlAllowOrigins:
                Items:
                  - "*"
              AccessControlExposeHeaders:
                Items:
                  - "*"
              AccessControlMaxAgeSec: 6000
              OriginOverride: false
  
  Outputs:
    cachePolicyId:
      Value: !Ref CachePolicy

    originRequestPolicyId:
      Value: !Ref OriginRequestPolicy

    responseHeadersPolicyId:
      Value: !Ref ResponseHeadersPolicy